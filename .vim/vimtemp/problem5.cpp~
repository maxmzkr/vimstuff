#include "./problem5.h"

int absolute_difference(int j, int k) {
  int difference = j - k;
  if (difference < 0) {
    difference = difference * -1;
  }
  return difference;
}

int closestValue(Node * root, int k) {
  int difference = absolute_difference(root->value, k);
  int alt_number = 0;
  if (k < root->value) {
    if (root->left != nullptr) {
      alt_number = closestValue(root->left, k);
    } else {
      return root->value;
    }
  } else if (k > root->value) {
    if (root->right != nullptr) {
      alt_number = closestValue(root->right, k);
    } else {
      return root->value;
    }
  } else {
    return root->value;
  }
  int alt_difference = absolute_difference(alt_number, k);
  if (alt_difference < difference) {
    return alt_number;
  }
  if (alt_difference > difference) {
    return root->value;
  }
  if (alt_number < root->value) {
    return alt_number;
  }
  return root->value;
}
