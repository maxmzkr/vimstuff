#include "./edge.h"
#include "./node.h"

double get_quick_length(int x1, int x2, int y1, int y2) {
	double x_diff = x1 - x2;
	double y_diff = y1 - y2;
  return x_diff*x_diff +  y_diff*y_diff;
}

double get_length(int x1, int x2, int y1, int y2) {
	return sqrt(get_quick_length(x1, x2, y1, y2));
}

double get_length(Node * node1, Node * node2) {
	return get_length(node1->x(), node2->x(), node1->y(), node2->y());
}

bool edge_compare(Edge * edge1, Edge * edge2) {
  return edge1->length() < edge2->length();
}

void Edge::set_node1(Node * node1) {
	node1_ = node1;
	if (node2_ != nullptr) {
		set_length_();
	}
}

void Edge::set_node2(Node * node2) {
	node2_ = node2;
	if (node1_ != nullptr) {
		set_length_();
	}
}

void Edge::set_used(bool used) {
	used_ = used;
}

Node * Edge::node1() {
	return node1_;
}

Node * Edge::node2() {
	return node2_;
}

bool Edge::used() {
	return used_;
}

double Edge::length() {
	return length_;
}

int Edge::other_node(int node_id) {
	if (node_id == node1_->id()) {
		return node2_->id();
	} else {
		return node1_->id();
	}
}

void Edge::print() {
	if (node1_->id() < node2_->id()) {
		printf("%i %i\n", node1_->id(), node2_->id());
	} else {
		printf("%i %i\n", node2_->id(), node1_->id());
	}
}

void Edge::set_length_() {
	length_ = get_length(node1_, node2_);
}
