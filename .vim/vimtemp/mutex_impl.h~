#ifndef MUTEX_IMPL_H_
#define MUTEX_IMPL_H_

#include <queue>
#include "./thread.h"

class mutex::impl {
 public:
  // public memeber functions for the impl class in mutex

  bool get_locked();

  void set_locked(bool new_locked);

  // add to blocked_queue
  void add_blocked_thread(thread::impl* add_thread);

  // returns thread from blocked queue
  thread::impl* get_blocked_thread();

  // returns true if there is a blocked_thread
  bool blocked_thread();

 private:
  // private memeber functions for the impl class in mutex
  bool locked = false;
  std::queue<thread::impl*> blocked_queue;
};

#endif  // MUTEX_IMPL_H_
