#ifndef CV_IMPL_H_
#define CV_IMPL_H_

#include <queue>
#include "./spin_lock.h"

// put the memeber functions declared above down here
class cv::impl {
 public:
	 impl();

  // add to waiting queue
  void add_waiting_thread(thread::impl* add_thread);

  // returns thread from waiting queue
  thread::impl* get_waiting_thread();

  // returns true if there is a waiting thread
  bool waiting_thread();

  // locks the cv
  void acquire_spin_lock();

  // unlocks the cv
  void release_spin_lock();

  // moves thread from waiting queue to ready queue
  void release_waiting_thread();

 private:
  // Private memeber functions of the impl class for cv's
  std::queue<thread::impl*> waiting_queue;

  // Mutex to lock the CV if signalling/waiting/broadcasting
  SpinLock* spin_lock_;
};

#endif  // CV_IMPL_H_
