import networkx as nx

def main():
    my_graph = nx.DiGraph()

    # my_graph.add_node("dependency1", label="dependency")
    # my_graph.add_node("dependency2", label="dependency")
    # my_graph.add_node("dependency3", label="dependency")
    # my_graph.add_node("dependency4", label="dependency")
    # my_graph.add_node("dependency_type1", label="depends")
    # my_graph.add_node("dependency_type2", label="depends_one_or_more")
    # my_graph.add_node("job_state", label="job_state")
    # my_graph.add_node("target1", label="target")
    # my_graph.add_node("target2", label="target")

    # my_graph.add_edge("dependency1", "dependency_type1")
    # my_graph.add_edge("dependency2", "dependency_type1")
    # my_graph.add_edge("dependency3", "dependency_type2")
    # my_graph.add_edge("dependency4", "dependency_type2")
    # my_graph.add_edge("dependency_type2", "job_state",
    #                   label="{\"ignore_mtime\": False}")
    # my_graph.add_edge("dependency_type1", "job_state")
    # my_graph.add_edge("job_state", "target1", label="{\"kind\": produces}")
    # my_graph.add_edge("job_state", "target2", label="{\"kind\": alternates}")

    # nx.write_dot(my_graph, "graph.dot")

    my_graph.add_node("creator1", label="creator")
    my_graph.add_node("creator2", label="creator")
    my_graph.add_node("target", label="target")
    my_graph.add_node("dependency_type1", label="depends")
    my_graph.add_node("dependency_type2", label="depends_one_or_more")
    my_graph.add_node("dependent1", label="dependent")
    my_graph.add_node("dependent2", label="dependent")

    my_graph.add_edge("creator1", "target", label="{\"kind\": \"produces\"}")
    my_graph.add_edge("creator2", "target", label="{\"kind\": \"alternates\"}")
    my_graph.add_edge("target", "dependency_type1")
    my_graph.add_edge("target", "dependency_type2")
    my_graph.add_edge("dependency_type1", "dependent1",
                      label="{\"ignore_mtime\": True}")
    my_graph.add_edge("dependency_type2", "dependent2")
    
    nx.write_dot(my_graph, "graph.dot")

if __name__ == "__main__":
    main()
