#include <iostream>
#include <cstdlib>
#include "thread.h"

using namespace std;

// int g = 0;
//
// mutex mutex1;
// cv cv1;
//
// void loop(void *a)
// {
//     char *id = (char *) a;
//     int i;
//
//     cout << "loop called with id " << id << endl;
//
//     mutex1.lock();
//     for (i=0; i<5; i++, g++) {
// 	cout << id << ":\t" << i << "\t" << g << endl;
//         mutex1.unlock();
// 	thread::yield();
//         mutex1.lock();
//     }
//     cout << id << ":\t" << i << "\t" << g << endl;
//     mutex1.unlock();
// }

void parent(void *a) {
  intptr_t arg = (intptr_t)a;

  cout << "parent called with arg " << arg << endl;
  // thread t1 ( (thread_startfunc_t) loop, (void *) "child thread");

  // loop( (void *) "parent thread");
}

int main() {
  cpu::boot(2, (thread_startfunc_t)parent, (void *)100, false, false, 0);
}
