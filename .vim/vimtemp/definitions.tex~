\documentclass[avery5388,grid]{flashcards}

\cardfrontstyle[\large\slshape]{headings}
\cardbackstyle{empty}
\cardfrontfoot{Math 217}

\usepackage{amssymb}
\usepackage{amsmath}
\usepackage{arydshln}
\usepackage{datetime}
\usepackage{enumitem}

\begin{document}

\begin{flashcard}[Definition 1.5]{Finite automaton}
\vspace*{\stretch{1}}
A 5-tuple (\textit{Q}, $\Sigma$, $\delta$, $\textit{q}_{0}$, \textit{F})
\begin{enumerate}
	\item \textit{Q} is a finite set called the \textit{\textbf{states}} (letters of the states),
	\item $\Sigma$ is a finite set called the \textit{\textbf{alphabet}} (possible inputs),
	\item $\delta : \textit{Q} \times \Sigma \longrightarrow \textit{Q}$ is the \textit{\textbf{transistion functions}} (state table),
	\item $\textit{q}_{0} \in \textit{Q}$ is the \textit{\textbf{start state}} (start state letter), and
	\item $\textit{F} \subseteq \textit{Q}$ is the \textit{\textbf{set of accept states}} (list of accept states).
\end{enumerate}
\vspace*{\stretch{1}}
\end{flashcard}

\begin{flashcard}[Definition 1.16]{Regular language}
\vspace*{\stretch{1}}
A language is called a \textit{\textbf{regular language}} if some finite atomaton recognizes it.
\vspace*{\stretch{1}}
\end{flashcard}

\begin{flashcard}[Definition 1.23]{Union, Concatenation, and Star}
\vspace*{\stretch{1}}
Let $A$ and $B$ be languages. We define the regular operations, \textit{\textbf{union, concatenation,}} and \textit{\textbf{star}} as follows:
\begin{itemize}
	\item \textbf{Union}: $A \cup B = \{x|x \in A \textrm{ or } x \in B\}$.
	\item \textbf{Concatenation}: $A \circ B = \{xy|x \in A and y \in B\}$.
	\item \textbf{Star}: $A\ast = \{x_1x_2 \ldots x_k | k \ge 0 \textrm{ and each } x_i \in A\}$.
\end{itemize}
\vspace*{\stretch{1}}
\end{flashcard}


\end{document}
