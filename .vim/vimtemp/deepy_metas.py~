"""The following are deepy wrappers around the meta targets defined by
builder
"""

import builder
import json

class DeepyDictMetaTarget(builder.jobs.MetaTarget):
    def __init__(self, rule_id, rules_db, config=None):
        job_collection = rules_db[rule_id]["depends"].keys()

        super(DeepyDictMetaTarget, self).__init__(
                unexpanded_id=rule_id, job_collection=job_collection,
                config=config)

    def __repr__(self):
        return "MetaTarget({})".format(str(json.dumps(self.job_collection)))
