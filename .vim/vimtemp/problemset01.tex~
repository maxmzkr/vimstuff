\documentclass[a4paper]{article}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{changepage}
\usepackage{gauss}
\usepackage[top=1in,bottom=1in,left=1.25in,right=1.25in]{geometry}
\usepackage{dsfont}
\usepackage{amsthm}
\usepackage{graphicx}
\usepackage{mathrsfs}
\usepackage{multirow}
\usepackage{amsmath}
\usepackage{amsthm}
\usepackage{amssymb}
\usepackage{epsfig}
\usepackage{upgreek}
\usepackage{graphicx}
\usepackage{array}
\usepackage{lipsum}
\usepackage{algorithm2e}
\usepackage{tikz}
\usetikzlibrary{arrows,automata,calc}
\author{}
\title{EECS376-PROBLEM SET1}
\begin{document}
\maketitle



Reading Covered: Section 1.1 and 1.2

Due Wednesday January 21st by 11:59 PM.


Unlike the worksheets, you are graded based on correctness. Make sure that 
your arguments are clear. You are encouraged to work together!  
However, your final write-ups should
be created independently.

\section*{Problem 1}
	Let $B = \Sigma^*$. Let $A = \textrm{ some non regular language }$ where $\epsilon \in A$. Then $A \circ B = \Sigma^*$ which is a regular language. Therefore $A \circ B$ is regular and $B$ is regular but $A$ is not required to be regular.

\section*{Problem 2}
	\begin{tikzpicture}[>=stealth',shorten >=1pt,auto,node distance=2cm,baseline={($(current bounding box.north)-(0,1.6ex)$)}]
		\node[initial,state]   (q1)               {$q_1$};
		\node[state]           (q2) [right of=q1] {$q_2$};
		\node[state]           (q3) [below of=q2] {$q_3$};
		\node[state]           (q4) [below of=q3] {$q_4$};
		\node[state]           (q6) [right of=q2] {$q_6$};
		\node[state]           (q7) [right of=q6] {$q_7$};
		\node[state,accepting] (q5) [right of=q7] {$q_5$};
		\node[state]           (q8) [below of=q6] {$q_8$};

		\path[->] (q1) edge [loop above]     node        {o}     (q1)
		               edge                  node        {b}     (q2)
									 edge [bend left=70]   node        {m}     (q6)
							(q2) edge                  node        {o}     (q3)
							     edge [loop above]     node        {b}     (q2)
							     edge [bend left]      node        {m}     (q6)
							(q3) edge                  node        {o}     (q4)
							     edge [bend right=45]  node        {b}     (q5)
									 edge                  node        {m}     (q8)
							(q4) edge [bend left]      node        {o}     (q1)
							     edge [bend left=50]   node        {b}     (q2)
									 edge [bend right]     node        {m}     (q5)
							(q5) edge [loop right]     node        {o,b,m} (q5)
							(q6) edge [bend left]      node        {o}     (q7)
									 edge [bend left]      node        {b}     (q2)
							     edge [loop above]     node        {m}     (q6)
						  (q7) edge [bend right=120] node [swap] {o}     (q1)
							     edge                  node        {b}     (q5)
									 edge [bend left]      node        {m}     (q6)
						  (q8) edge                  node        {o}     (q7)
							     edge                  node        {b}     (q5)
									 edge                  node        {m}     (q6);
	\end{tikzpicture}

\section*{Problem 3}
	\begin{tikzpicture}[>=stealth',shorten >=1pt,auto,node distance=2cm,baseline={($(current bounding box.north)-(0,1.6ex)$)}]
		\node [initial,state]   (q1)               {$q_1$}; 
		\node [state]           (q2) [right of=q1] {$q_2$};
		\node [state]           (q3) [right of=q2] {$q_3$};
		\node [state,accepting] (q4) [below of=q3] {$q_4$};
		\node [state,accepting] (q5) [right of=q4] {$q_5$};
		\node [state]           (q6) [below of=q4] {$q_6$};

		\path[->] (q1) edge [loop above]    node        {0}          (q1)
		               edge [bend left]     node        {1}          (q2)
							(q2) edge [bend left]     node        {0}          (q1)
							     edge                 node        {1}          (q3)
							(q3) edge [bend right=65] node [swap] {0}          (q1)
							     edge [loop right]    node        {1}          (q3)
									 edge                 node        {$\epsilon$} (q4)
						  (q4) edge                 node        {0}          (q6)
							     edge [bend right]    node [swap] {1}          (q5)
							(q5) edge [bend right]    node [swap] {0,1}        (q4)
							(q6) edge [loop below]    node        {0,1}        (q6);
	\end{tikzpicture}

\section*{Problem 4}


\subsection*{4.1}
aetup:
Let $A$ be a regular language.\\
Let $w^R = w_n w_{n-1} \ldots w_1$ where $w = w_1 w_2 \ldots w_n$
Let $A^R = \{w^R : w \in A\}$\\
Let $M$ be a DFA that accepts A\\
Let $M$ be defined as $(Q, \Sigma, \delta, q_0, F)$\\
% \indent $Q = \{q_1, q_2, \ldots, q_n\}$\\
Let $M^R$ be an NFA defined by $(Q \cup \{q_0^\prime\}, \Sigma, \delta, q_0^\prime, \{q_0\})$\\
Where:\\
\indent
\begin{align*}
	\delta^\prime(q_0^\prime, \epsilon) &= F\\
	\delta^\prime(q_0^\prime, \sigma) &= \emptyset \text{\ for all } a \in \Sigma\\
	\delta^\prime(q, \sigma) &= \{p : q = \delta(p, \sigma)\}\\
\end{align*}
In otherwords, we've reversed all the transitions in M. We've created a new start state that connects to all the accept states in $M$ via $\epsilon$ transitions. We've also connected all other transitions from the start state to the emptyset. Made all the accept states into reject states and turned the old start state into a accept state.\\
\\
I assert $M^R$ accepts $A^R$\\
Proof:\\
Let $w = w_1 w_2 \ldots w_n$ be accepted by $M$\\
The there exists a set of states $R = \{r_0, r_1, \ldots, r_n\}$ such that:\\
\begin{align*}
	r_0 &= q_0\\
	r_n &\in F\\
	r_i &= \delta(r_{i-1}, w_i)\text{, for }1 \le i \le n\\
\end{align*}
If $w^R = w_n w_{n-1} \ldots w_1 = \epsilon w_n w_{n-1} \ldots w_1 $ is accepted by $M^R$, there exists a set of state $R^\prime = \{r_0^\prime, r_1^\prime, \ldots, r_{n+1}^\prime\}$\\
Where:\\
\begin{align*}
	r_0^{\prime} &= q_0^\prime\\
	r_{n+1}^\prime &\in \{q_0\}\\
	r_{1}^\prime &\in \delta^\prime(r_{0}^{\prime}, \epsilon)\\
	r_{i+1} &\in \delta^\prime(r_{i}, w_{i})\text{, for }1 \le i \le n+1\\
\end{align*}
Assume $R^\prime = \{q_0^\prime, r_n, r_{n-1}, \ldots, r_0\}$\\
$R^\prime$ follows all requirements for acceptance by $M^R$.\\
\begin{align*}
	q_0^\prime =& q_0^\prime&\\
	r_{0} \in& \{q_0\}\text{\ because by definition of acceptance of }w\text{\ by }M\text{\ }r_0 = q_0\\
	q_n^\prime \in& \delta^\prime(r_{0}^{\prime\prime}, \epsilon)\text{\ by definition of }M^R\\
	r_n \in& F\text{\ because }r_n \in F\text{\ is a requirement by acceptance in }M\\
	r_{i-1} \in& \delta^\prime(r_{i}, w_{i-1})\text{, for }1 \le i \le m\\
	&\text{because }r_i = \delta(r_{i-1}, w_i)\text{, for }1 \le i \le m\text{\ due to the acceptance in }M\\
	&\text{and }\delta^\prime(q,  a) = \{p : q = \delta(p, a)\}\text{\ by the definition of }M^R\\
\end{align*}
\\
Thus $\{w^R : w \in A\} \subset L(M^R)$\\
\\
Let $w^R = w_n w_{n-1} \ldots w_1 = \epsilon w_n w_{n-1} \ldots w_1$ where $w^R \in A^R$.\\
Since $w^R$ is accepted by $M^R$, there exists a set of states $R = \{r_0, r_1, \ldots, r_{n+1}\}$\\
Where:\\
\begin{align*}
	r_0 &= q_0^\prime\\
	r_{n+1} &\in \{q_0\}\\
	r_1 &\in \delta^\prime(r_{0}, \epsilon)\\
	r_{i+1} &\in \delta^\prime(r_{i}, w_{i})\text{, for }1 \le i \le n+1\\
\end{align*}
If $w = w_1 w_2 \ldots w_n$ is accepted by $M$, there exists a set of states $R^\prime = \{r_0^\prime, r_1^\prime, \dots, r_n^\prime\}$\\
Where:\\
\begin{align*}
	r_0^\prime &= q_0\\
	r_n^\prime &\in F\\
	r_i^\prime &= \delta(r_{i-1}^\prime, w_i)\text{, for }1 \le i \le n\\
\end{align*}
Assume $R' = \{r_1, r_2, \ldots, r_{n+1}\}$\\
$R$ follows all requirements for acceptance by $M$.\\
\begin{align*}
	r_1 =& q_0\text{\ because }r_1\text{\ is the accept state in }M^R.\\
	r_n \in& F\text{\ due to the definiton of acceptance in }M^R.\\
	r_i =& \delta(r_{i-1}, w_i)\text{, for }2 \le i \le n+1\\
	&\text{because }r_{i-1} \in \delta^\prime(r_i, w_{i-1})\text{, for }1 \le i \le m\text{\ from the defintion of acceptance in }M^R\\
	&\text{and }\delta^\prime(q, a) = \{p : q = \delta(p, a)\}\text{\ by the defintion of }M^R\\
\end{align*}
\\
Thus for all $L(M^R) \subset \{w^R : w \in A\}$\\
\\
Thus $M^R$ accepts ${w^R : w \in A}$\\
Thus $A^R$ can be defined by the $M^R$\\
Thus $A^R$ is regular\\
\\

\subsection*{4.2}
Let M be the finite automaton for A defined by $(Q, \Sigma, \delta, q_1, F)$ where $Q = \{q_1, q_2, \ldots, q_n\}$ \\
Let $\text{Half}(A) = \{x : \exists y, |x| = |y|, xy \in A\}$ \\
Let $\text{Half}(A, r) = \{x : \exists y, |x| = |y|, xy \in A \text{ and the final state of x in M is } r\}$ \\
It should be clear that $\bigcup\limits_{i=1}^{n}\text{Half}(A, q_i) = \text{Half}(A)$ \\
Let $\text{Pref}(A, r)$ accept all strings that are a prefix of a string in A that ends in state r be defined by $(Q, \Sigma, \delta, q_1, \{r\})$ where $r$ has a path that leads to an accept state\\
\\
Let $w = w_1 w_2 \ldots w_n$ for all $w \in Pref(A, r)$\\
Then $w$ has a set of states $R = \{r_0, r_1, \ldots, r_n\}$\\
Where:\\
\indent $r_0 = q_0$\\
\indent $r_n \in \{r\}$\\
\indent $r_i = \delta(r_{i-1}, w_i)$, for $1 \le i \le n$\\
Since $r_n \in \{r\}$ and by the definition of $\text{Pref}(A, r)$, there are a set of transitions such that $r_n$ reaches $q \in F$.\\
Thus $w^\prime = w_1 w_2 \ldots w_n w_{n+1} w_{n+2} \ldots w_m$ exists such that a set of states $R^\prime = \{r_0, r_1, \ldots, r_n, r_{n+1}, r_{n+2}, \ldots r_m$\\
Where:\\
\indent $r_0 = q_0$\\
\indent $r_n \in F$\\
\indent $r_i = \delta(r_{i-1}, w_i)$, for $1 \le i \le m$\\
Which is the definition of acceptance of $w^\prime$ by $M$.\\
\\
Thus all $w$ accepted by $\text{Pref}(A, r)$ is a prefix of a string in $A$ and ends in state $r$.
\\
Let $w = w_1 w_2 \ldots w_n$ for all $w \in A$\\
Then $w$ has a set of states $R = \{r_0, r_1, \ldots, r_n\}$\\
Where:\\
\indent $r_0 = q_0$\\
\indent $r_n \in F$\\
\indent $r_i = \delta(r_{i-1}, w_i)$, for $1 \le i \le n$\\
Let $r = r_m$\\
Since $r$ can reach an accept state in $M$, there exists $\text{Pref}(A, r)$ such that $w^\prime = w_1 w_2 \ldots w_m$ is accepted by $\text{Pref}(A, r)$\\
Where:\\
\indent $r_0 = q_0$\\
\indent $r_m \in \{r\}$\\
\indent $r_i = \delta(r_{i-1}, w_i)$, for $1 \le i \le m$\\
Which is the definition of acceptance of $w^\prime$ by $\text{Pref}(A, r)$\\
\\
Thus all prefix of $w$ accepted by $M$ is accepted by $\text{Pref}(A, r)$\\
\\
Thus $\text{Pref}(A, r)$ defines the regular language of all prefixes of strings in $A$ that end in state $r$ and therefore regular languages are closed under $\text{Pref}(A, r)$\\
\\
Let $\text{Suf}(A, r)$ accept all strings that are a suffix of a string in A that ends in state $r$\\
Let $w = w_1 w_2 \ldots w_n$ follow a set of states $R = \{r_0, r_1, \ldots r_n\}$.\\
From 4.1 $w^R = w_n w_{n-1} \ldots w_1$ follows states $R^\prime = \{r_n, r_{n-1}, \ldots r_0\}$.\\
Let $r_m = r$\\
Then $\text{Pref}(A^R, r)$ accepts $w^{R\prime} = w_n w_{n-1} \ldots w_{m+1}$ with states $R^{\prime\prime} = \{r_n, r_{n-1}, \ldots, r_m\}$.\\
Then ${\text{Pref}(A^R, r)}^R$ accepts $w^{R\prime R} = w_{m+1} w_{m+2} \ldots w_n$ with states $R^{\prime\prime\prime} = \{r_m, r_{m+1}, \ldots, r_n\}$\\
\\
Thus ${\text{Pref}(A^R, r)}^R$ accepts all suffixes of strings in $A$ starting in state $r$.\\
Thus ${\text{Pref}(A^R, r)}^R = \text{Suf}(A, r)$\\
Thus $\text{Suf}(A, r)$ accepts all suffixes of strings in $A$ starting in state $r$ and regular languages are closed under $\text{Suf}(A, r)$\\
\\
Now take the operation $\text{Suf}^\prime(A, r)$ which accepts all strings that have the same length of a suffix of a string in $A$ that starts in state $r$\\
It should be clear that this can be accomplished by making all transitions in $\text{Suf}(A, r)$ accept all characters in the language.\\
If $\text{Suf}^\prime(A, r)$ and $\text{Pref}(A, r)$ are run in parallel then the resulting language is all prefixes of $A$ that end in state $r$ that are of the same length of a suffix that starts in state $r$\\
This, by definition, is $\text{Half}(A, r)$\\
This means that all regular languages are closed under $\text{Half}(A, r)$\\
This also means be the defintion of $\text{Half}(A)$ that all regular languages are closed under $\text{Half}(A)$\\
Let $w = w_1 w_2 \ldots w_n$ be in $A$. Then $A^R$ accepts $w_n w_{n-1} \ldots w_1$. And $\text{Half}(A^R)$ accepts $w_n w_{n-1} \ldots w_{n/2 + 1}$. And $\text{Half}(A^R)^R$ accepts $w_{n/2 + 1} w_{n/2 + 2} \ldots w_n$ which is the definition of $A_{-\frac{1}{2}}$. Since this was constructed from a regular language using only the Half and reverse operations, $A_{-\frac{1}{2}}$ is regular

\section*{Problem 5}


\subsection*{5.1}
The English language is finite so the English language is regular. Given a the DFA for the English language defined by $(Q, \Sigma, \delta, q_1, F)$ where $Q = \{q_1, q_2, \ldots, q_n\}$, Taking the negation of the DFA can be defined by $(Q, \Sigma, \delta, q_1, F^\prime)$ where $q_i \in F^\prime \:\: \forall i, 1 \le i \le n | q_i \not\in F$. Assume $w = w_1 w_2 \ldots w_n$ is not accepted by the English language. Then then all sets of states states $\{r_0, r_1, \ldots, r_n\}$ where $r_0 = q_1$, $r_i = \delta(r_{i-1}, w_i)$, follows $r_n \not\in F$ which would be in $F^\prime$. For all strings $w = w_1 w_2 \ldots w_n$ accepted by the negation of the English language there exists a set of states $\{r_0, r_1, \ldots, r_n\}$ where $r_0 = q_1$, $r_i = \delta(r_{i-1}, w_i)$, $r_n \in F'$ which is not in F. Thus any word not in the English language is accepted by the negation of the English language and any word accepted by the negation of the English language is not accepted by the English language. Since the negation of the English language is a DFA and accepts all words not in the English language and no more, all the words not in the English language is a regular language.

\subsection*{5.2}
It was shown in the last section that regular languages are closed under negation. From Sipser we also know that regular languages are closed under union. We also know that the intersection of two sets $S1, S2$ is $\overline{\overline{S1} \cup \overline{S2}}$ thus regular languages are closed over intersection\\
$R_e$ is defined by the intersection of strings in $R$ and strings that are even. Thus $R_e$ is regular.

\subsection*{5.3}
$T$ is not guaranteed to be regular. Let $S$ be a non regular language such that $\epsilon \in S$. Let $T = \{\epsilon\}$. $T$ is regular and $T \subset S$ proving $T$ is not always non regular.





\end{document}
