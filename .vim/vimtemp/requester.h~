// A requester is something that makes a request. The requester should be able
// to handle the act of making a request.

#ifndef REQUESTER_H_
#define REQUESTER_H_

#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include "./thread.h"

struct Request {
  int requester_id;
  int request_track;
  bool *request_handled;
};

struct RequesterArguments {
  int requester_id;
  char *filename;
  std::vector<Request *> *requests;

  bool *handled;
  int *files_alive;
  int *max_requests;

  mutex *server_lock;
  mutex *cout_lock;
  cv *submit_signal;
  cv *put_signal;
};

void make_request(std::vector<Request *> requests, int requester_id,
                  int request_track, bool *handled, mutex *cout_lock,
                  cv *put_signal);

void requester(void *arguments);

#endif  // REQUESTER_H_
