#ifndef OS_PAGE_TABLE_HOLDER_H_
#define OS_PAGE_TABLE_HOLDER_H_

#include <sys/types.h>
#include <unordered_map>
#include "./os_page_table.h"

class OSPageTableHolder {
 public:
	// Getters
	static pid_t current_pid();

	// Setters
	static void set_current_pid(pid_t pid);

  // Returns the page table that is associated with the pid
  // TODO this can be replaced with get current page table
  static OSPageTable* get_page_table(pid_t pid);

  // Returns the page table for the current pid
  static OSPageTable* get_current_page_table();

  // Adds a page table to the map with pid as the key
  static void add_page_table(pid_t pid, OSPageTable* os_page_table);


 private:
  static std::unordered_map<pid_t, OSPageTable*> os_page_table_list_;
	static pid_t current_pid_;
};

#endif  // OS_PAGE_TABLE_HOLDER_H_
