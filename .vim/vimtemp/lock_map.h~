#include <pthread.h>
#include <string>

class LockContention {
 public:
  LockContention();
  ~LockContention();

  void rlock();
  void wlock();

  // Returns the number of contenders for the lock
  unsigned int unlock();
  
 private:
  unsigned int num_contenders_ = 0;
  pthread_rwlock_t rwlock;
};

class LockMap {
  void lock(std::string pathname);

  void unlock(std::string pathname);
 private:
  std::unordered_map<std::string, LockContention> lock_map_;
  pthread_lock_t lock_; 
};
